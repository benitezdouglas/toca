// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Person {
  id        Int     @default(autoincrement()) @id
  email     String  @db.VarChar(100) @unique
  name      String
  password  String
  artist    Artist? @relation("Person")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model ArtistGenre {
  id        Int      @default(autoincrement()) @id
  name      String   @db.VarChar(100) @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  artists   Artist[] @relation("ArtistGenres")
}

model Artist {
  id        Int          @default(autoincrement()) @id
  PersonId Int?        @unique @map("person_id")
  about     String?     @db.Text
  image     String?     @db.VarChar(255)
  isVerified Boolean     @default(false) @map("is_verified")
  isActive  Boolean     @default(true) @map("is_active")
  isDeleted Boolean     @default(false) @map("is_deleted")
  instagram String?     @db.VarChar(100) @unique
  facebook  String?     @db.VarChar(100) @unique
  twitter   String?     @db.VarChar(100) @unique
  youtube   String?     @db.VarChar(100) @unique
  tiktok    String?     @db.VarChar(100) @unique
  spotify   String?     @db.VarChar(100) @unique
  soundcloud String?   @db.VarChar(100) @unique
  appleMusic String?   @db.VarChar(100) @unique
  bandcamp  String?     @db.VarChar(100) @unique
  website   String?     @db.VarChar(255) @unique
  discord   String?     @db.VarChar(100) @unique
  Person    Person?     @relation("Person", fields: [PersonId], references: [id])
  genres    ArtistGenre[] @relation("ArtistGenres")
  createdAt DateTime     @default(now()) @map("created_at")
  updatedAt DateTime     @updatedAt @map("updated_at")
}